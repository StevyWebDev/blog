<?php

namespace App\Controller\Admin;

use App\Entity\User;
use App\Repository\UserRepository;
use Doctrine\ORM\EntityManagerInterface;
use Doctrine\ORM\QueryBuilder;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\ChoiceField;
use EasyCorp\Bundle\EasyAdminBundle\Field\IdField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;

class UserCrudController extends AbstractCrudController
{
    public function __construct(
        private UserRepository $userRepository
    ){}

    public static function getEntityFqcn(): string
    {
        return User::class;
    }

    public function configureFields(string $pageName): iterable
    {
        $user = $this->userRepository->find($this->getUser());
        $listRoles = $user->getAllRoles();

        yield IdField::new('id')->hideOnForm();
        yield TextField::new('firstname')->hideOnForm();
        yield TextField::new('lastname')->hideOnForm();
        yield TextField::new('email')->hideOnForm();
        yield ChoiceField::new('roles')
            ->setChoices($listRoles)
            ->allowMultipleChoices(true)
            ->renderExpanded()
            ->renderAsBadges()
        ;
    }

    public function configureActions(Actions $actions): Actions
    {
        $actions
            ->remove(Crud::PAGE_INDEX, Action::NEW)
        ;
        return parent::configureActions($actions); // TODO: Change the autogenerated stub
    }

    public function persistEntity(EntityManagerInterface $entityManager, $entityInstance): void
    {
        parent::persistEntity($entityManager, $entityInstance); // TODO: Change the autogenerated stub
    }

    public function index(AdminContext $context)
    {
        return parent::index($context); // TODO: Change the autogenerated stub
    }
}
